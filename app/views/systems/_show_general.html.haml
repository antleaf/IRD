%div.system_view_panel
  %h2= t(:general_information)
  %div.row
    %div.col-md-6
      = print_field_name_and_value(t('attributes.name'),@system.name)
      -# = print_field_name_and_value(t('attributes.short_name'),@system.short_name)
      = print_field_name_and_value(t('attributes.aliases'),@system.aliases.join(', ')) unless @system.aliases.nil? || @system.aliases.empty?
      = print_field_name_and_value(t(:homepage),link_to(@system.url,@system.url, class: "external-link"))
      = print_field_name_and_value(t(:contact),auto_link(@system.contact,:html => {class: "external-link"})) if @system.contact.present?
      = print_field_name_and_value(t('activerecord.attributes.system.owner'),(link_to(@system.owner.name, @system.owner) unless @system.owner.nil?),true)
      %div.property
        %h5.property-name= t('activerecord.models.country.one')
        %div.property-value
          - unless @system.country.nil?
            = link_to t(@system.country.id,scope: :countries_list),@system.country
            = image_tag "flags/#{@system.country.id.downcase}.svg", :alt => @system.country.id, :class => 'flag-tiny-facet'

      = print_field_name_and_value(t('attributes.description'),@system.description) unless @system.description.blank?
    %div.col-md-6
      - if @system.thumbnail.attached?
        = image_tag(rails_blob_url(@system.thumbnail),class:"website-thumbnail shadowed")
        %br
        %br
      -# i18n-tasks-use t('activerecord.attributes.system.subcategory_list.#{subcategory}') # this lets i18n-tasks know the key is used
      = print_field_name_and_value(t(:repository_scope),System.translated_subcategory(@system.subcategory))
      -# i18n-tasks-use t('activerecord.attributes.system.primary_subject_list.#{subject}') # this lets i18n-tasks know the key is used
      = print_field_name_and_value(t(:primary_subject),System.translated_primary_subject(@system.primary_subject))
      %div.property
        %h5.property-name= t(:content_types)
        %div.property-value
          - if !@system.media_types.empty?
            %ul
              - @system.media_types.each do |medium|
                %li= t(medium, scope: :media_types)
          - else
            =t(:none)

